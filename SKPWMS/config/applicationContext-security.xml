<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
                        http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.1.xsd">


	<!-- 页面标签权限功能依赖 -->
	<beans:bean id="webInvocationFilter"
		class="org.springframework.security.web.access.DefaultWebInvocationPrivilegeEvaluator">
		<beans:constructor-arg ref="customFilter" />
	</beans:bean>

	<!-- 自定义登录配置 -->
	<http security="none" pattern="/frame/**" />
	<http security="none" pattern="/js/**" />
	<http security="none" pattern="/css/**" />
	<http security="none" pattern="/images/**" />
	<http security="none" pattern="/login.jsp" />
	<http use-expressions="true" access-denied-page="/accessDenied.jsp"  entry-point-ref="authenticationProcessingFilterEntryPoint">
		<logout invalidate-session="true"  logout-success-url="/" logout-url="/j_spring_security_logout"/>
		<session-management invalid-session-url="/login.jsp" session-fixation-protection="migrateSession">
		</session-management>
		<!-- <custom-filter before="FORM_LOGIN_FILTER" ref="actionFilter"/> -->
		<custom-filter position="FORM_LOGIN_FILTER" ref="loginFilter"/>  
		<custom-filter before="FILTER_SECURITY_INTERCEPTOR" ref="customFilter" />
	</http>
	
	
	<!-- 登录验证器 -->  
    <beans:bean id="loginFilter" class="com.skpw.securitymanager.MyUsernamePasswordAuthenticationFilter">  
        <!-- 处理登录的action -->  
        <beans:property name="filterProcessesUrl" value="/j_spring_security_check"></beans:property>  
         <!-- 验证成功后的处理-->  
        <beans:property name="authenticationSuccessHandler" ref="loginLogAuthenticationSuccessHandler"></beans:property>  
         <!-- 验证失败后的处理-->  
        <beans:property name="authenticationFailureHandler" ref="simpleUrlAuthenticationFailureHandler"></beans:property>  
        <beans:property name="authenticationManager" ref="customAuthenticationManager"></beans:property>  
    </beans:bean>  
    
    
   <!--  <beans:bean id="actionFilter"  class="com.skpw.filter.ActionFilter"></beans:bean> -->
    
    <beans:bean id="loginLogAuthenticationSuccessHandler"  
        class="org.springframework.security.web.authentication.SavedRequestAwareAuthenticationSuccessHandler">  
        <beans:property name="defaultTargetUrl" value="/sys_index"></beans:property>  
    </beans:bean>
      
    <beans:bean id="simpleUrlAuthenticationFailureHandler"  
        class="org.springframework.security.web.authentication.SimpleUrlAuthenticationFailureHandler">  
        <!-- 可以配置相应的跳转方式。属性forwardToDestination为true采用forward false为sendRedirect -->  
        <beans:property name="defaultFailureUrl" value="/loginFail"></beans:property>  
    </beans:bean>  
	
	<!-- 未登录的切入点 -->  
    <beans:bean id="authenticationProcessingFilterEntryPoint" class="org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint">  
        <beans:property name="loginFormUrl" value="/login.jsp"></beans:property>  
    </beans:bean>  
	
	<!-- 一个自定义的filter，必须包含authenticationManager,accessDecisionManager, securityMetadataSource三个属性。 -->
	<beans:bean id="customFilter"
		class="com.skpw.securitymanager.MyFilterSecurityInterceptor">
		<beans:property name="authenticationManager" ref="customAuthenticationManager" />
		<beans:property name="accessDecisionManager" ref="customAccessDecisionManager" />
		<beans:property name="securityMetadataSource" ref="customSecurityMetadataSource" />
	</beans:bean>
	<!-- 注意能够为authentication-manager 设置alias别名 -->
	<authentication-manager alias="customAuthenticationManager">
		<authentication-provider user-service-ref="customUserDetailsService">
		</authentication-provider>
	</authentication-manager>
</beans:beans>
  	